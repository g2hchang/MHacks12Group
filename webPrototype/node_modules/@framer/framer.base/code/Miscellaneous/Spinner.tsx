import * as React from "react"
import { Spinner as BaseSpinner, SpinnerProps, themes } from "../../../base"
import { useContext } from "react"
import { ThemeContext } from "styled-components"
import { intentControls, themeControls } from "../propertyControls"
import { ControlType, addPropertyControls, RenderTarget } from "framer"
import { centerLayout, OmitTheme } from "../utils"

type Props = OmitTheme<SpinnerProps> &
    Partial<{
        theme: string
        canvasSize: boolean
        intent: string
        width: number
        height: number
    }>

const defaults: Props = {
    theme: "light",
    intent: "primary",
    canvasSize: true,
    size: 24,
    width: 24,
    height: 24,
}

export function Spinner(props: Props) {
    const themeContext = useContext(ThemeContext)
    const { theme, canvasSize, width, height, size, ...rest } = props

    return centerLayout(
        props,
        <BaseSpinner
            {...rest}
            animate={RenderTarget.current() !== RenderTarget.thumbnail}
            size={canvasSize ? Math.min(width, height) : size}
            theme={themeContext || themes[theme]}
        />
    )
}

Spinner.defaultProps = {
    ...defaults,
    height: defaults.size,
    width: defaults.size,
}

addPropertyControls(Spinner, {
    ...themeControls(defaults.theme),
    ...intentControls(defaults.intent),
    canvasSize: {
        type: ControlType.Boolean,
        title: "Size",
        defaultValue: defaults.canvasSize,
        enabledTitle: "Canvas",
        disabledTitle: "Manual",
    },
    size: {
        type: ControlType.Number,
        title: " ",
        defaultValue: defaults.size,
        min: 0,
        hidden: ({ canvasSize }) => canvasSize,
    },
})
